# Cursor Rules

## Instructions

- Record fixes for mistakes or corrections to avoid repetition in the `Lessons` section.
- Organize thoughts and plan steps before starting a task in the `Scratchpad` section.
- Clear old tasks if necessary.
- Use todo markers for progress tracking:
  - `[X]` Completed tasks
  - `[ ]` Pending tasks
- Update Scratchpad after completing subtasks.
- Reflect and plan after milestones for better task management.
- Always refer to Scratchpad before planning the next step.
Follow the UI/UX guidelines in docs/uiux-guidelines.md for all design decisions.

## Lessons

1. Use `npx shadcn@latest add [component]` instead of `npx shadcn-ui@latest add [component]` when installing Shadcn UI components.
2. In Next.js 14+, page props params must be typed as a Promise. Example:
   ```typescript
   type tParams = Promise<{ id: string }>
   interface PageProps {
     params: tParams
   }
   ```
   Then await the params in the component:
   ```typescript
   export default async function Page(props: PageProps) {
     const { id } = await props.params
   }
   ```
3. Use `const session = await auth()` instead of `const session = await getServerSession(authOptions)` for Next.js authentication. The new `auth()` function is the recommended way to get the session in Next.js Auth v5.
4. When importing `useRouter` from 'next/navigation', the component must be marked as a client component using the `'use client'` directive at the top of the file, as this hook only works on the client side.

## Scratchpad

### 0. Development Steps Roadmap [ ]

- [ ] Foundation & Tooling
  - [x] Initialize Next.js 15 (TS), set strict mode, alias paths
  - [x] Configure ESLint/Prettier, Husky + lint-staged, CI checks
  - [x] Install UI kit (Shadcn), icons (Lucide), charts (Recharts)
  - Set up env management (.env.local, Zod-safe server/env parsing)
- [ ] Auth & Access Control
  - Configure `next-auth@beta` with email/password and OAuth (Google, GitHub)
  - Implement session retrieval via `auth()` and server actions guards
  - Add RBAC (customer, admin) and protected routes/middleware
- [ ] Data Layer
  - Model core entities in Prisma: User, Product, Category, Variant/SKU, Inventory, Cart, Order, Payment, Address, Review, Wishlist, Coupon/Promotion, AuditLog
  - Add indexes, enums, constraints; create seed scripts and factories
  - Run migrations; verify with Postgres locally
- [ ] UI Foundation
  - Configure Shadcn theme, typography, color tokens, spacing scale
  - Add base components: Button, Input, Select, Dialog, Sheet, Dropdown, Tooltip, Toast
  - Create layout shells: public `(home)`, account, and admin shells (sidebar + topbar)
- [ ] Catalog & Discovery
  - Category tree, breadcrumb, and facet filters (price, brand, rating, stock)
  - Server-side filtering, pagination, and sorting (price, newest, popular)
  - Product detail: gallery (Uploadthing images), variants, specs, related items
- [ ] State & Validation
  - Cart and wishlist with Zustand (persisted), optimistic UI
  - Forms validated with Zod (server + client schemas)
- [ ] Media & File Management
  - Configure Uploadthing; image transformations, file size/type guards
  - Admin media manager for product assets
- [ ] Checkout & Payments
  - Address book, shipping methods, tax calculation placeholder
  - Stripe payment intents, webhooks, order status transitions
  - Order confirmation screens and email triggers
- [ ] Emails (Resend)
  - Branded templates for order confirmation, shipping, password reset
  - Environment-safe senders, retry and logging
- [ ] Admin Dashboard
  - KPI cards (revenue, orders, customers, AOV) with real data
  - Sales analytics with Recharts (time range filters)
  - Recent orders table with sorting/filtering and quick actions
  - Inventory management: CRUD, bulk edit, import/export CSV
  - Low stock alerts with thresholds and restock actions
  - Top products and customer insights
  - User management and roles
- [ ] Real-time & Notifications
  - WebSocket or SSE for live orders and stock updates
  - In-app toasts and admin notifications
- [ ] Search & SEO
  - Debounced search with typeahead, relevance ranking
  - SEO: metadata, sitemaps, structured data, OpenGraph images
- [ ] Performance & Reliability
  - Image optimization, caching headers, ISR/SSR strategy
  - API optimization, N+1 avoidance, pagination defaults
  - Error boundaries, loading states, graceful fallbacks
- [ ] Testing & Quality
  - Unit tests (utils, hooks), integration tests (API, server actions)
  - E2E flows: browse → add to cart → checkout → webhook → email
  - Security review (auth, input, payments, webhooks)
- [ ] Deployment & Ops
  - Provision Postgres, Stripe keys, email sender domain, file storage
  - CI/CD pipeline, migrations on deploy, runtime env checks
  - Monitoring, logs, alerts, backups, analytics
- [ ] Documentation
  - Developer setup, architecture decisions, API contracts, runbooks
  - Admin guide for catalog, orders, promotions, and reports

### 1. Project Setup and Configuration [X]

- [x] Initialize Next.js 15 project with TypeScript
- [x] Set up project structure and folders
- [x] Configure ESLint and Prettier
- [ ] Install and configure dependencies:
  - Shadcn UI components
  - Lucide icons
  - Zod for validation
  - Zustand for state management
  - Recharts for analytics
  - Resend for emails
  - Uploadthing for file uploads
  - Prisma ORM
  - PostgreSQL database
  - NextAuth.js beta for authentication
  - Stripe for payments

### 2. Database and Authentication [X]

- [ ] Set up PostgreSQL database
- [ ] Configure Prisma schema:
  - User model
  - Product model
  - Category model
  - Order model
  - Review model
  - Cart model
- [ ] Implement NextAuth.js authentication:
  - Email/Password
  - OAuth providers (Google, GitHub)
  - JWT handling
  - Protected routes

### 3. Core Features - Customer Side [ ]

- [ ] Home Layout:
  - Create `(home)` folder in `app` directory
  - Header with logo, search bar, and navigation
  - Footer with links and social media
- [ ] Homepage:
  - banner carousel
  - latest products
- [ ] Products Catalog:
  - Sidebar with categories and filters
  - Search results
  - Product grid
  - Pagination
- [ ] Product pages:
  - Create product detail page layout
  - Implement image gallery with thumbnails
  - Add product information section:
    - Title, price, description
    - Stock status
    - Add to cart button
  - Reviews and ratings section:
    - Display existing reviews
    - Add review form for authenticated users
    - Star rating component
  - Related products section:
    - Show products from same category
    - Product card carousel
- [ ] Shopping cart:
  - Add/remove items
  - Update quantities
  - Cart persistence
- [ ] Checkout process:
  - Shipping information
  - Payment integration (Stripe)
  - Order confirmation
- [ ] User dashboard:
  - Order history
  - Profile management
  - Saved addresses
  - Wishlist

### 4. Admin Dashboard [ ]

- [ ] Admin authentication and authorization
- [ ] Dashboard overview:
  - [ ] Layout and Structure:
    - [ ] Create admin dashboard layout with sidebar navigation
    - [ ] Implement responsive grid for dashboard widgets
    - [ ] Add loading states and error boundaries
  - [ ] Key Metrics Cards:
    - [ ] Total revenue widget with real data
    - [ ] Total orders widget with real data
    - [ ] Total customers widget with real data
    - [ ] Average order value widget with real data
  - [ ] Sales Analytics:
    - [ ] Revenue Chart:
      - [ ] Implement line chart using Recharts
      - [ ] Add daily/weekly/monthly/yearly filters
      - [ ] Show revenue trends over time
      - [ ] Add tooltip with detailed information
    - [ ] Order Statistics:
      - [ ] Bar chart for order volume
      - [ ] Order status distribution
      - [ ] Peak ordering times
  - [ ] Recent Orders Table:
    - [ ] Implement data table with columns:
      - [ ] Order ID
      - [ ] Customer name
      - [ ] Order total
      - [ ] Status
      - [ ] Date
    - [ ] Add sorting and filtering
    - [ ] Quick actions (view, process, update status)
  - [ ] Low Stock Alerts:
    - Products with stock below threshold
    - Quick restock actions
    - Stock level indicators
  - [ ] Top Products:
    - Best-selling products list
    - Revenue by product
    - Stock status
  - [ ] Customer Insights:
    - New vs returning customers
    - Customer acquisition chart
    - Top customers by revenue
  - [ ] Real-time Updates:
    - Implement WebSocket connection
    - Live order notifications
    - Stock level updates
  - [ ] Export and Reports:
    - CSV/PDF export functionality
    - Custom date range selection
    - Report generation
- [ ] Product management:
  - CRUD operations
  - Bulk actions
  - Image upload (Uploadthing)
- [ ] Order management:
  - Order processing
  - Status updates
  - Refund handling
- [ ] User management:
  - Customer list
  - Admin privileges
  - User actions

### 5. Advanced Features [ ]

- [ ] Real-time notifications
- [ ] Email system (Resend):
  - Order confirmations
  - Shipping updates
  - Password reset
- [ ] Search optimization
- [ ] Performance optimization:
  - Image optimization
  - Caching strategies
  - API optimization
- [ ] Analytics and reporting

### 6. Testing and Deployment [ ]

- [ ] Unit testing
- [ ] Integration testing
- [ ] E2E testing
- [ ] Security audit
- [ ] Production deployment:
  - Environment setup
  - CI/CD pipeline
  - Monitoring
  - Backup strategy

### 7. Documentation [ ]

- [ ] API documentation
- [ ] User guide
- [ ] Admin documentation
- [ ] Deployment guide